function print-project-makefile
{
	echo 'SHELL = /bin/sh'
	echo ''
	echo 'incdir = ../inc'
	echo 'srcdir = ../src'
	echo 'bindir = ../bin'
	echo ''
	echo 'WARNINGS = -Wchar-subscripts -Wcomment -Wformat=2 -Winit-self \
-Wimplicit -Wignored-qualifiers -Wmain -Wmissing-braces \
-Wmissing-include-dirs -Wparentheses -Wsequence-point -Wreturn-type -Wswitch \
-Wtrigraphs -Wunused -Wuninitialized -Wstrict-aliasing -Warray-bounds \
-Wfloat-equal -Wundef -Wno-endif-labels -Wpointer-arith -Wtype-limits \
-Wconversion -Wenum-compare -Wsign-conversion -Waddress \
-Wmissing-field-initializers -Wvolatile-register-var -Wno-write-strings \
-Wsign-promo'
	echo ''
	echo 'CPP = clang++'
	echo 'CFLAGS = $(WARNINGS) -Werror -pipe -I $(incdir)'
	echo 'LFLAGS ='
	echo ''
	echo 'modmkfiles = $(shell find $(srcdir) -type f -name .makefile)'
	echo 'moddirs = $(modmkfiles:$(srcdir)/%/.makefile=%)'
	echo 'modules = $(subst /,-,$(moddirs))'
	echo 'modcleans = $(modules:%=%-clean)'
	echo 'modinstalls = $(modules:%=%-install)'
	echo 'moduninstalls = $(modules:%=%-uninstall)'
	echo 'modformats = $(modules:%=%-format)'
	echo ''
	echo 'include $(modmkfiles)'
	echo ''
	echo '.DEFAULT_GOAL := all'
	echo ''
	echo '.PHONY : all'
	echo 'all : $(modules)'
	echo ''
	echo '.PHONY : clean'
	echo 'clean : $(modcleans)'
	echo ''
	echo '.PHONE : install'
	echo 'install : $(modinstalls)'
	echo ''
	echo '.PHONY : uninstall'
	echo 'uninstall : $(moduninstalls)'
	echo ''
	echo '.PHONY : format'
	echo 'format : $(modformats)'
}

function print-generic-header-makefile
{
	echo 'modname-moddepends ='
	echo 'modname-CFLAGS ='
	echo 'modname-LFLAGS ='
	echo ''
	echo 'modname-path = $(srcdir)/modname'
	echo 'modname-files = $(shell find $(modname-path) -type f -regex '"'"'\.\./\([^./][^/]*/\)*[^./][^/]*\.hpp'"'"')'
	echo 'modname-include-files = $(modname-files:$(srcdir)/%=$(incdir)/%)'
	echo 'modname-install-files = $(modname-files:$(srcdir)/%=/usr/include/%)'
	echo 'modname-directories = $(shell find $(modname-path) -type f -regex '"'"'\.\./\([^./][^/]*/\)*[^./][^/]*'"'"')'
	echo 'modname-format-files = $(modname-files:$(srcdir)/%=$(modname-path)/.build/%.format)'
	echo 'modname-install-moddepends = $(modname-moddepends:%=%-install)'
	echo ''
	echo 'modname : $(incdir)/modname.hpp $(modname-include-files)'
	echo '	touch modname'
	echo ''
	echo '.PHONY : modname-clean'
	echo 'modname-clean :'
	echo '	rm -rf $(incdir)/modname.hpp'
	echo '	rm -rf $(modname-include-files)'
	echo '	rm -rf $(incdir)/modname'
	echo '	rm -rf $(modname-format-files)'
	echo '	rm -rf $(modname-path)/.build/modname'
	echo '	rm -rf modname'
	echo ''
	echo '.PHONY : modname-install'
	echo 'modname-install : /usr/include/modname.hpp $(modname-install-files)'
	echo ''
	echo '.PHONY : modname-uninstall'
	echo 'modname-uninstall :'
	echo '	rm -rf /usr/include/modname.hpp'
	echo '	rm -rf /usr/include/modname'
	echo ''
	echo '.PHONY : modname-format'
	echo 'modname-format : $(modname-format-files)'
	echo ''
	echo '$(incdir)/modname.hpp : $(modname-path)/.build/modname.hpp $(modname-path)/.build/modname.hpp.gch'
	echo '	cp $(<) $(@)'
	echo ''
	echo '$(incdir)/%.hpp : $(srcdir)/%.hpp $(modname-path)/.build/modname.hpp.gch'
	echo '	mkdir -p $(dir $(@))'
	echo '	cp $(<) $(@)'
	echo ''
	echo '$(modname-path)/.build/modname.hpp.gch : $(modname-path)/.build/modname.hpp'
	echo '	$(CPP) $(CFLAGS) $(modname-CFLAGS) -I $(srcdir) -c -o $(@) $(<)'
	echo ''
	echo '$(modname-path)/.build/modname.hpp : $(modname-format-files) $(modname-directories)'
	echo '	./gen-hdr.sh $(srcdir) modname | clang-format > $(@)'
	echo ''
	echo '$(modname-path)/.build/%.format : $(srcdir)/%'
	echo '	./format.sh $(<)'
	echo '	mkdir -p $(dir $(@))'
	echo '	touch $(@)'
	echo ''
	echo '/usr/include/%.hpp : $(incdir)/%.hpp $(modname-install-moddepends)'
	echo '	mkdir -p $(dir $(@))'
	echo '	cp $(<) $(@)'
}

function print-header-makefile
{
	local modname="${1}"

	print-generic-header-makefile | sed -e 's~modname~'"${modname}"'~g'
}

function print-generic-binary-makefile
{
	echo 'modname-moddepends ='
	echo 'modname-CFLAGS ='
	echo 'modname-LFLAGS ='
	echo ''
	echo 'modname-path = $(srcdir)/modname'
	echo 'modname-files = $(shell find $(modname-path) -type f -regex '"'"'\.\./\([^./][^/]*/\)*[^./][^/]*\.hpp'"'"')'
	echo 'modname-directories = $(shell find $(modname-path) -type f -regex '"'"'\.\./\([^./][^/]*/\)*[^./][^/]*'"'"')'
	echo 'modname-format-files = $(modname-files:$(srcdir)/%=$(modname-path)/.build/%.format)'
	echo 'modname-install-moddepends = $(modname-moddepends:%=%-install)'
	echo ''
	echo 'modname : $(bindir)/modname'
	echo '	touch modname'
	echo ''
	echo '.PHONY : modname-clean'
	echo 'modname-clean :'
	echo '	rm -rf $(bindir)/modname'
	echo '	rm -rf $(modname-path)/.build/main.o'
	echo '	rm -rf $(modname-path)/.build/main.cpp'
	echo '	rm -rf $(modname-format-files)'
	echo '	rm -rf $(modname-path)/.build/modname'
	echo '	rm -rf modname'
	echo ''
	echo '.PHONY : modname-install'
	echo 'modname-install : /usr/bin/modname'
	echo ''
	echo '.PHONY : modname-uninstall'
	echo 'modname-uninstall :'
	echo '	rm -rf /usr/bin/modname'
	echo ''
	echo '.PHONY : modname-format'
	echo 'modname-format : $(modname-format-files)'
	echo ''
	echo '$(bindir)/modname : $(modname-path)/.build/main.o'
	echo '	$(CPP) $(LFLAGS) $(modname-LFLAGS) -o $(@) $(<)'
	echo ''
	echo '$(modname-path)/.build/main.o : $(modname-path)/.build/main.cpp $(modname-moddepends)'
	echo '	$(CPP) $(CFLAGS) $(modname-CFLAGS) -I $(modname-path) -c -o $(@) $(<)'
	echo ''
	echo '$(modname-path)/.build/main.cpp : $(modname-format-files) $(modname-directories)'
	echo '	./gen-bin.sh $(modname-path) | clang-format > $(@)'
	echo ''
	echo '$(modname-path)/.build/%.format : $(srcdir)/%'
	echo '	./format.sh $(<)'
	echo '	mkdir -p $(dir $(@))'
	echo '	touch $(@)'
	echo ''
	echo '/usr/bin/modname : $(bindir)/modname $(modname-install-moddepends)'
	echo '	cp $(<) $(@)'
}

function print-binary-makefile
{
	local modname="${1}"

	print-generic-binary-makefile | sed -e 's~modname~'"${modname}"'~g'
}
